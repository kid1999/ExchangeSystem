
# 端口号:
server:
  port: 8080
  servlet:
    context-path: /api


# swagger2 配置
swagger2:
  enable: true


# mail 配置
mail:
  fromMail:
    addr: kid19992021@163.com


# minio 文件服务器
minio:
  url: 159.75.6.26:9000
  accessKey: kid1999
  secretKey: Xyq_pass=kid1999


# mybatis-plus配置
mybatis-plus:
  global-config:
    db-config:
      logic-delete-field: flag  # 全局逻辑删除的实体字段名(since 3.3.0,配置后可以忽略不配置步骤2)
      logic-delete-value: 1 # 逻辑已删除值(默认为 1)
      logic-not-delete-value: 0 # 逻辑未删除值(默认为 0)
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl

logging:
  level:
    com.baomidou.example.mapper: debug


spring:
  application:
    name: oauth2-client
  # mysql 配置：
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://159.75.6.26:3306/ESystem?useUnicode=true&characterEncoding=utf8&serverTimezone=CST
    username: root
    password: Xyq_pass=kid1999

    #Hikari 连接池配置
    hikari:
      minimum-idle: 5   #最小空闲连接数量
      idle-timeout: 180000  # 空闲连接存活最大时间，默认600000（10分钟）
      maximum-pool-size: 10  # 连接池最大连接数，默认是10
      auto-commit: true    # 控制从池返回 的连接的默认自动提交行为,默认值：true
      pool-name: MyHikariCP  # 连接池名字
      max-lifetime: 300000   #控制池中连接的最长生命周期，值0表示无限生命周期，默认1800000即30分钟
      connection-timeout: 30000  #数据库连接超时时间,默认30秒，即30000
      connection-test-query: SELECT 1

  # redis 配置
  redis:
    host: 159.75.6.26
    port: 6379
    database: 0
    timeout: 5000
    password: Xyq_pass=kid1999
    jedis:
      pool:
        max-active: 8
        max-idle: 8
        max-wait: -1
        min-idle: 0


  # 邮件服务
  mail:
    host: smtp.163.com
    port: 25
    username: kid19992021@163.com # 邮箱账号
    password: OZJTINRPORNGYEET    # 授权码（在邮箱开启pop3和smtp后会给你）
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
            required: true


  # rabbitmq 配置
  rabbitmq:
    host: 159.75.6.26
    port: 5672
    username: root
    password: Xyq_pass=kid1999
    publisher-confirms: true
    publisher-returns: true
    template:
      mandatory: true
    connection-timeout: 1000ms

# 授权服务器配置
security:
  oauth2:
    client:
#      client-id: user-client
#      client-secret: user-secret-8888
      user-authorization-uri: http://localhost:8080/oauth/authorize
      access-token-uri: http://localhost:8080/oauth/token
    resource:
      jwt:
        key-uri: http://localhost:8080/oauth/token_key
        key-value: dev